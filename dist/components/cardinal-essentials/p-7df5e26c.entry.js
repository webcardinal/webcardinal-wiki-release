import{r as t,a as s,h as e,g as o}from"./p-8419ec55.js";import{A as n}from"./p-732a86ff.js";import{s as a,a as i,c as r,b as h,h as c,d as l,e as u,f as p,l as d}from"./p-6bd16f5b.js";import{s as f,a as g,b as y,g as b,c as m,d as P}from"./p-53bcbd1d.js";const w=(t,...s)=>{t||console.warn(...s)},v=()=>{let t,s=[];return{setPrompt:s=>(w(null==t,"A history supports only one prompt at a time"),t=s,()=>{t===s&&(t=null)}),confirmTransitionTo:(s,e,o,n)=>{if(null!=t){const a="function"==typeof t?t(s,e):t;"string"==typeof a?"function"==typeof o?o(a,n):(w(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),n(!0)):n(!1!==a)}else n(!0)},appendListener:t=>{let e=!0;const o=(...s)=>{e&&t(...s)};return s.push(o),()=>{e=!1,s=s.filter((t=>t!==o))}},notifyListeners:(...t)=>{s.forEach((s=>s(...t)))}}},k=(t,s="scrollPositions")=>{let e=new Map;const o=(s,o)=>{if(e.set(s,o),f(t,"sessionStorage")){const s=[];e.forEach(((t,e)=>{s.push([e,t])})),t.sessionStorage.setItem("scrollPositions",JSON.stringify(s))}};if(f(t,"sessionStorage")){const o=t.sessionStorage.getItem(s);e=o?new Map(JSON.parse(o)):e}return"scrollRestoration"in t.history&&(history.scrollRestoration="manual"),{set:o,get:t=>e.get(t),has:t=>e.has(t),capture:s=>{o(s,[t.scrollX,t.scrollY])}}},j={hashbang:{encodePath:t=>"!"===t.charAt(0)?t:"!/"+p(t),decodePath:t=>"!"===t.charAt(0)?t.substr(1):t},noslash:{encodePath:p,decodePath:i},slash:{encodePath:i,decodePath:i}},H=(t,s)=>{const e=0==t.pathname.indexOf(s)?"/"+t.pathname.slice(s.length):t.pathname;return Object.assign({},t,{pathname:e})},O={browser:(t,s={})=>{let e=!1;const o=t.history,n=t.location,p=t.navigator,d=g(t),f=!y(p),P=k(t),j=null!=s.forceRefresh&&s.forceRefresh,H=null!=s.getUserConfirmation?s.getUserConfirmation:b,O=null!=s.keyLength?s.keyLength:6,L=s.basename?a(i(s.basename)):"",S=()=>{try{return t.history.state||{}}catch(t){return{}}},U=t=>{t=t||{};const{key:s,state:e}=t,{pathname:o,search:a,hash:i}=n;let u=o+a+i;return w(!L||c(u,L),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+u+'" to begin with "'+L+'".'),L&&(u=l(u,L)),r(u,e,s||h(O))},A=v(),T=t=>{P.capture(V.location.key),Object.assign(V,t),V.location.scrollPosition=P.get(V.location.key),V.length=o.length,A.notifyListeners(V.location,V.action)},E=t=>{m(p,t)||x(U(t.state))},R=()=>{x(U(S()))},x=t=>{if(e)e=!1,T();else{const s="POP";A.confirmTransitionTo(t,s,H,(e=>{e?T({action:s,location:t}):B(t)}))}},B=t=>{let s=M.indexOf(V.location.key),o=M.indexOf(t.key);-1===s&&(s=0),-1===o&&(o=0);const n=s-o;n&&(e=!0,N(n))},C=U(S());let M=[C.key],Y=0,F=!1;const J=t=>L+u(t),N=t=>{o.go(t)},q=s=>{Y+=s,1===Y?(t.addEventListener("popstate",E),f&&t.addEventListener("hashchange",R)):0===Y&&(t.removeEventListener("popstate",E),f&&t.removeEventListener("hashchange",R))},V={length:o.length,action:"POP",location:C,createHref:J,push:(t,s)=>{w(!("object"==typeof t&&void 0!==t.state&&void 0!==s),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");const e="PUSH",a=r(t,s,h(O),V.location);A.confirmTransitionTo(a,e,H,(t=>{if(!t)return;const s=J(a),{key:i,state:r}=a;if(d)if(o.pushState({key:i,state:r},"",s),j)n.href=s;else{const t=M.indexOf(V.location.key),s=M.slice(0,-1===t?0:t+1);s.push(a.key),M=s,T({action:e,location:a})}else w(void 0===r,"Browser history cannot push state in browsers that do not support HTML5 history"),n.href=s}))},replace:(t,s)=>{w(!("object"==typeof t&&void 0!==t.state&&void 0!==s),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");const e="REPLACE",a=r(t,s,h(O),V.location);A.confirmTransitionTo(a,e,H,(t=>{if(!t)return;const s=J(a),{key:i,state:r}=a;if(d)if(o.replaceState({key:i,state:r},"",s),j)n.replace(s);else{const t=M.indexOf(V.location.key);-1!==t&&(M[t]=a.key),T({action:e,location:a})}else w(void 0===r,"Browser history cannot replace state in browsers that do not support HTML5 history"),n.replace(s)}))},go:N,goBack:()=>N(-1),goForward:()=>N(1),block:(t="")=>{const s=A.setPrompt(t);return F||(q(1),F=!0),()=>(F&&(F=!1,q(-1)),s())},listen:t=>{const s=A.appendListener(t);return q(1),()=>{q(-1),s()}},win:t};return V},hash:(t,s={})=>{let e=!1,o=null,n=0,p=!1;const f=t.location,g=t.history,y=P(t.navigator),m=null!=s.keyLength?s.keyLength:6,{getUserConfirmation:k=b,hashType:H="slash"}=s,O=s.basename?a(i(s.basename)):"",{encodePath:L,decodePath:S}=j[H],U=()=>{const t=f.href,s=t.indexOf("#");return-1===s?"":t.substring(s+1)},A=t=>{const s=f.href.indexOf("#");f.replace(f.href.slice(0,s>=0?s:0)+"#"+t)},T=()=>{let t=S(U());return w(!O||c(t,O),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+t+'" to begin with "'+O+'".'),O&&(t=l(t,O)),r(t,void 0,h(m))},E=v(),R=t=>{Object.assign(V,t),V.length=g.length,E.notifyListeners(V.location,V.action)},x=()=>{const t=U(),s=L(t);if(t!==s)A(s);else{const t=T(),s=V.location;if(!e&&d(s,t))return;if(o===u(t))return;o=null,B(t)}},B=t=>{if(e)e=!1,R();else{const s="POP";E.confirmTransitionTo(t,s,k,(e=>{e?R({action:s,location:t}):C(t)}))}},C=t=>{let s=J.lastIndexOf(u(V.location)),o=J.lastIndexOf(u(t));-1===s&&(s=0),-1===o&&(o=0);const n=s-o;n&&(e=!0,N(n))},M=U(),Y=L(M);M!==Y&&A(Y);const F=T();let J=[u(F)];const N=t=>{w(y,"Hash history go(n) causes a full page reload in this browser"),g.go(t)},q=(t,s)=>{n+=s,1===n?t.addEventListener("hashchange",x):0===n&&t.removeEventListener("hashchange",x)},V={length:g.length,action:"POP",location:F,createHref:t=>"#"+L(O+u(t)),push:(t,s)=>{w(void 0===s,"Hash history cannot push state; it is ignored");const e="PUSH",n=r(t,void 0,h(m),V.location);E.confirmTransitionTo(n,e,k,(t=>{if(!t)return;const s=u(n),a=L(O+s);if(U()!==a){o=s,(t=>{f.hash=t})(a);const t=J.lastIndexOf(u(V.location)),i=J.slice(0,-1===t?0:t+1);i.push(s),J=i,R({action:e,location:n})}else w(!1,"Hash history cannot PUSH the same path; a new entry will not be added to the history stack"),R()}))},replace:(t,s)=>{w(void 0===s,"Hash history cannot replace state; it is ignored");const e="REPLACE",n=r(t,void 0,h(m),V.location);E.confirmTransitionTo(n,e,k,(t=>{if(!t)return;const s=u(n),a=L(O+s);U()!==a&&(o=s,A(a));const i=J.indexOf(u(V.location));-1!==i&&(J[i]=s),R({action:e,location:n})}))},go:N,goBack:()=>N(-1),goForward:()=>N(1),block:(s="")=>{const e=E.setPrompt(s);return p||(q(t,1),p=!0),()=>(p&&(p=!1,q(t,-1)),e())},listen:s=>{const e=E.appendListener(s);return q(t,1),()=>{q(t,-1),e()}},win:t};return V}},L=class{constructor(e){t(this,e),this.root="/",this.historyType="browser",this.titleSuffix="",this.routeViewsUpdated=(t={})=>{if(this.history&&t.scrollToId&&"browser"===this.historyType){const s=this.history.win.document.getElementById(t.scrollToId);if(s)return s.scrollIntoView()}this.scrollTo(t.scrollTopOffset||this.scrollTopOffset)},this.isServer=s(this,"isServer"),this.queue=s(this,"queue")}componentWillLoad(){this.history=O[this.historyType](this.el.ownerDocument.defaultView),this.history.listen((t=>{t=H(t,this.root),this.location=t})),this.location=H(this.history.location,this.root)}scrollTo(t){const s=this.history;if(null!=t&&!this.isServer&&s)return"POP"===s.action&&Array.isArray(s.location.scrollPosition)?this.queue.write((()=>{s&&s.location&&Array.isArray(s.location.scrollPosition)&&s.win.scrollTo(s.location.scrollPosition[0],s.location.scrollPosition[1])})):this.queue.write((()=>{s.win.scrollTo(0,t)}))}render(){if(this.location&&this.history)return e(n.Provider,{state:{historyType:this.historyType,location:this.location,titleSuffix:this.titleSuffix,root:this.root,history:this.history,routeViewsUpdated:this.routeViewsUpdated}},e("slot",null))}get el(){return o(this)}};export{L as stencil_router}